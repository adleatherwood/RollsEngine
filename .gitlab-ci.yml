image: mcr.microsoft.com/dotnet/core/sdk:3.1

stages:
  - test
  - publish

branch::test:
  stage: test
  except:
    - tags
  script: |
    cd src
    dotnet test -v minimal -c Release /p:CollectCoverage=true

branch::publish:
  stage: publish
  only:
    - tags
  script: |
    cd src

    echo ---------------------------------------------- TESTING

    dotnet test -v minimal -c Release /p:CollectCoverage=true

    echo ---------------------------------------------- VERSION #1

    echo VERSION := $CI_COMMIT_TAG

    sed -i -- "s/1\.0\.0\.0/${CI_COMMIT_TAG}/g" ./RollsEngine.Newtonsoft/RollsEngine.Newtonsoft.csproj

    echo ---------------------------------------------- VERSION #2

    sed -i -- "s/1\.0\.0\.0/${CI_COMMIT_TAG}/g" ./RollsEngine.Newtonsoft/RollsEngine.Newtonsoft.csproj

    echo ---------------------------------------------- BUILD #1

    cd RollsEngine
    dotnet pack -c Release
    cd ..

    echo ---------------------------------------------- BUILD #2

    cd RollsEngine.Newtonsoft
    dotnet pack -c Release
    cd ..

    echo ---------------------------------------------- PUBLISH #1

    cd ./RollsEngine/bin/Release
    NUGET_PKG=$(ls *.nupkg)
    echo PACKAGE := $NUGET_PKG
    dotnet nuget push $NUGET_PKG -k $NUGET_KEY -s https://api.nuget.org/v3/index.json
    cd ../../..

    echo ---------------------------------------------- PUBLISH #2

    cd ./RollsEngine.Newtonsoft/bin/Release
    NUGET_PKG=$(ls *.nupkg)
    echo PACKAGE := $NUGET_PKG
    dotnet nuget push $NUGET_PKG -k $NUGET_KEY -s https://api.nuget.org/v3/index.json
    cd ../../..
